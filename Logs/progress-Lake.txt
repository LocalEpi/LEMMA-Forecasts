county =  Lake 
-/                                                                                                   -/                                                                                                   -/                                                                                                   -/                                                                                                   -/                                                                                                   -/                                                                                                   Fitting to observed data
debugging in: RunSim(inputs)
debug at /Users/joshua/Dropbox (UC Berkeley Biostat)/jsLEMMA/R/CredibilityInterval.R#107: {
    inputs$model.inputs$end.date <- max(inputs$obs.data$date)
    seir_inputs <- GetStanInputs(inputs)
    seir_inputs$extend <- 0L
    internal.args <- inputs$internal.args
    GetInit <- function(chain_id) {
        init.names <- grep("^mu_", names(seir_inputs), value = T)
        init <- seir_inputs[init.names]
        names(init) <- sub("mu_", "", init.names)
        names(init) <- sub("beta_inter", "beta_multiplier", names(init))
        names(init) <- sub("frac_pui", "frac_PUI", names(init))
        init <- c(init, list(sigma_obs = rep(1, length(init$frac_PUI)), 
            ini_exposed = 1/seir_inputs$lambda_ini_exposed))
        return(init)
    }
    if (IsValidInput(inputs$internal.args$warmup)) {
        warmup <- inputs$internal.args$warmup
    }
    else {
        warmup <- floor(internal.args$iter/2)
    }
    run_time <- system.time({
        stan_seir_fit <- rstan::sampling(stanmodels$LEMMA, data = seir_inputs, 
            seed = internal.args$random.seed, iter = internal.args$iter, 
            warmup = warmup, cores = internal.args$cores, refresh = internal.args$refresh, 
            control = list(max_treedepth = internal.args$max_treedepth, 
                adapt_delta = internal.args$adapt_delta), pars = c("error"), 
            init = GetInit, include = FALSE)
    })
    print(run_time)
    return(stan_seir_fit)
}
debug at /Users/joshua/Dropbox (UC Berkeley Biostat)/jsLEMMA/R/CredibilityInterval.R#108: inputs$model.inputs$end.date <- max(inputs$obs.data$date)
debug at /Users/joshua/Dropbox (UC Berkeley Biostat)/jsLEMMA/R/CredibilityInterval.R#109: seir_inputs <- GetStanInputs(inputs)
debug at /Users/joshua/Dropbox (UC Berkeley Biostat)/jsLEMMA/R/CredibilityInterval.R#110: seir_inputs$extend <- 0L
debug at /Users/joshua/Dropbox (UC Berkeley Biostat)/jsLEMMA/R/CredibilityInterval.R#111: internal.args <- inputs$internal.args
