geom_text()
setkey(by.tract, "test.diff")
high.tracts <- by.tract[test.diff < -600 & num.pos > 3, tract]
high.tracts
ggplot(map1, aes(fill = test.diff, label = tract.text, x = X, y = Y)) +
geom_sf(color = "grey") +
scale_fill_gradient(low = "red", high = "darkgreen") +
#scale_fill_viridis_c(option = "D") +
coord_sf(xlim = c(-122.52, -122.37), ylim = c(37.71, 37.81)) +
geom_text_repel()
ggplot(map1, aes(fill = test.diff, label = tract.text, x = X, y = Y)) +
geom_sf(color = "grey") +
scale_fill_gradient(low = "red", high = "darkgreen") +
#scale_fill_viridis_c(option = "D") +
coord_sf(xlim = c(-122.52, -122.37), ylim = c(37.71, 37.81)) +
geom_text_repel()
by.tract
by.tract[test.diff < -600 & num.pos > 3, tract]
by.tract[test.diff < -700 & num.pos > 3, tract]
by.tract[, TRACTA := as.integer(tract)]
by.tract[, test.diff := pmin(test.diff, 600)] #limit SFGH and Laguna Honda tracts
map1 <- merge(by.tract, name.geo.tract, by = "TRACTA")
map1[test.diff < -700 & num.pos > 3, tract.text := tract]
setnames(map1, "NAME_E", "NAME")
sf.map <- readRDS("~/Documents/MissionCovid/San Francisco Population and map.RDS")
map1 <- merge(sf.map, map1, by = "NAME")
map1 <- cbind(map1, st_coordinates(st_centroid(map1)))
ggplot(map1, aes(fill = test.diff, label = tract.text, x = X, y = Y)) +
geom_sf(color = "grey") +
scale_fill_gradient(low = "red", high = "darkgreen") +
#scale_fill_viridis_c(option = "D") +
coord_sf(xlim = c(-122.52, -122.37), ylim = c(37.71, 37.81)) +
geom_text_repel()
ggplot(map1, aes(fill = test.diff, label = tract.text, x = X, y = Y)) +
geom_sf(color = "grey") +
scale_fill_gradient(low = "red", high = "darkgreen") +
#scale_fill_viridis_c(option = "D") +
coord_sf(xlim = c(-122.52, -122.37), ylim = c(37.71, 37.81)) +
geom_text()
map1 <- cbind(map1, st_coordinates(st_centroid(map1)))
ggplot(map1, aes(fill = test.diff, label = tract.text, x = X, y = Y)) +
geom_sf(color = "grey") +
scale_fill_gradient(low = "red", high = "darkgreen") +
#scale_fill_viridis_c(option = "D") +
coord_sf(xlim = c(-122.52, -122.37), ylim = c(37.71, 37.81)) +
geom_text()
ggplot(map1, aes(fill = test.diff, label = tract.text, x = X, y = Y)) +
geom_sf(color = "grey") +
scale_fill_gradient(low = "red", high = "palegreen") +
#scale_fill_viridis_c(option = "D") +
coord_sf(xlim = c(-122.52, -122.37), ylim = c(37.71, 37.81)) +
geom_text()
by.demo
ggplot(by.demo[num.tests > 3], aes(x = CI.width, y = pos.per.test, size = demo.tract.pop / mean(demo.tract.pop))) + geom_point()
by.demo[, CI.width := CI.high - CI.low]
ggplot(by.demo[num.tests > 3], aes(x = CI.width, y = pos.per.test, size = demo.tract.pop / mean(demo.tract.pop))) + geom_point()
ggplot(by.demo[num.tests > 3], aes(x = CI.width, y = pos.per.test, color = race, size = demo.tract.pop / mean(demo.tract.pop))) + geom_point() + guide(size = F)
ggplot(by.demo[num.tests > 3], aes(x = CI.width, y = pos.per.test, color = race, size = demo.tract.pop / mean(demo.tract.pop))) + geom_point() + guides(size = F)
?geom_point
ggplot(by.demo[num.tests > 3], aes(x = CI.width, y = pos.per.test, color = race, shape = age, size = demo.tract.pop / mean(demo.tract.pop))) + geom_point() + guides(size = F)
ggplot(by.demo[num.tests > 3 & num.pos > 0], aes(x = CI.width, y = pos.per.test, color = race, shape = age, size = demo.tract.pop / mean(demo.tract.pop))) + geom_point() + guides(size = F)
setkey(by.demo)
setkey(by.demo, CI.low)
print(tail(by.demo[, .(race, age, tract, num.pos, num.tests, pos.per.test, CI.low, CI.high, demo.tract.pop)]))
print(tail(by.demo[, .(race, age, tract, num.pos, num.tests, pos.per.test, CI.low, CI.high, demo.tract.pop)]), 15)
print(tail(by.demo[, .(race, age, tract, num.pos, num.tests, pos.per.test, CI.low, CI.high, demo.tract.pop)], 15))
print(tail(by.demo[num.tests > 2, .(race, age, tract, num.pos, num.tests, pos.per.test, CI.low, CI.high, demo.tract.pop)], 15))
high.tracts
print(tail(by.demo[num.tests > 2, .(race, age, tract, num.pos, num.tests, pos.per.test, CI.low, CI.high, demo.tract.pop)], 25))
by.demo[num.tests > 2 & CI.low > 0.1, sum(demo.tract.pop)]
by.demo[num.tests > 2 & CI.low > 0.15, sum(demo.tract.pop)]
by.demo[num.tests > 2 & CI.low > 0.15, tract]
unique(by.demo[num.tests > 2 & CI.low > 0.15, tract])
yy[tract %in% high.tracts & race == "Latinx", sum(demo.tract.pop)]
yy[tract %in% high.tracts & race == "Latinx"]
by.demo[tract %in% high.tracts & race == "Latinx"]
by.demo[tract %in% high.tracts & race == "Latinx", sum(demo.tract.pop)]
unique(by.demo[num.tests > 2 & CI.low > 0.15, tract])
high.tracts.CI.low <- unique(by.demo[num.tests > 2 & CI.low > 0.15, tract])
by.demo[tract %in% high.tracts.CI.low & race == "Latinx", sum(demo.tract.pop)]
map1 <- merge(by.demo, name.geo.tract, by = "TRACTA")
map1[demo.CI.low > 0.15, tract.text := tract]
sum.latinx <- map1[demo.CI.low > 0.15, sum(demo.tract.pop)]
sum.latinx
sum.latinx <- map1[demo.CI.low > 0.15 & race == "Latinx", sum(demo.tract.pop)]
sum.latinx
ggplot(map1, aes(fill = demo.CI.low, label = tract.text, x = X, y = Y)) +
geom_sf(color = "grey") +
scale_fill_gradient(low = "palegreen", high = "red") +
#scale_fill_viridis_c(option = "D") +
coord_sf(xlim = c(-122.52, -122.37), ylim = c(37.71, 37.81)) +
geom_text() +
ggtitle("Labeled tracts have 2.5% quantile infected > 15% within one or more Latinx age group", subtitle = paste("Total Latinx population of labelled tracts = ", sum.latinx))
by.demo[, TRACTA := as.integer(tract)]
by.demo[, demo.CI.low := max((num.tests > 2) * CI.low), by = tract]
map1 <- merge(by.demo, name.geo.tract, by = "TRACTA")
map1[demo.CI.low > 0.15, tract.text := tract]
sum.latinx <- map1[demo.CI.low > 0.15 & race == "Latinx", sum(demo.tract.pop)]
setnames(map1, "NAME_E", "NAME")
sf.map <- readRDS("~/Documents/MissionCovid/San Francisco Population and map.RDS")
map1 <- merge(sf.map, map1, by = "NAME")
map1 <- cbind(map1, st_coordinates(st_centroid(map1)))
ggplot(map1, aes(fill = demo.CI.low, label = tract.text, x = X, y = Y)) +
geom_sf(color = "grey") +
scale_fill_gradient(low = "palegreen", high = "red") +
#scale_fill_viridis_c(option = "D") +
coord_sf(xlim = c(-122.52, -122.37), ylim = c(37.71, 37.81)) +
geom_text() +
ggtitle("Labeled tracts have 2.5% quantile infected > 15% within one or more Latinx age group", subtitle = paste("Total Latinx population of labelled tracts = ", sum.latinx))
rm(list = ls())
source('~/Dropbox (UC Berkeley Biostat)/LEMMA_shared/JS code branch/Read Cenus Data for SF tracts.R')
source('~/Dropbox (UC Berkeley Biostat)/LEMMA_shared/JS code branch/Read Cenus Data for SF tracts.R')
source('~/Dropbox (UC Berkeley Biostat)/LEMMA_shared/JS code branch/Read Cenus Data for SF tracts.R')
source('~/Dropbox (UC Berkeley Biostat)/LEMMA_shared/JS code branch/Read Cenus Data for SF tracts.R')
print(tail(by.demo[num.tests > 2, .(race, age, tract, num.pos, num.tests, pos.per.test, CI.low, CI.high, demo.tract.pop)], 25))
by.demo
by.demo <- yy[week1 >= 24 & week1 <= 27 & demo.tract.pop > 0 & age != "0-17", .(num.pos = sum(pos), num.tests = .N, pos.per.test = sum(pos) / .N, demo.tract.pop = Get1(demo.tract.pop)), keyby = c("race", "age", "tract")]
by.demo[, demo := paste0(race, "_", age)]
by.demo[, CI.low := GetCI(num.pos, num.tests, 1)]
by.demo[, CI.high := GetCI(num.pos, num.tests, 2)]
by.demo[, CI.width := CI.high - CI.low]
print(tail(by.demo[num.tests > 2, .(race, age, tract, num.pos, num.tests, pos.per.test, CI.low, CI.high, demo.tract.pop)], 25))
setkey(by.demo, CI.low)
print(tail(by.demo[num.tests > 2, .(race, age, tract, num.pos, num.tests, pos.per.test, CI.low, CI.high, demo.tract.pop)], 25))
print(tail(by.demo[num.tests > 2, .(race, age, tract, num.pos, num.tests, pos.per.test, CI.low, CI.high, demo.tract.pop)], 30))
demographics_nosex[, race.pop := sum(population), by = c("race")]
yy <- merge(yy[, .(age, race, tract, pos, date, demo.tract.pop, demo.pop)], unique(demographics_nosex[, .r(race.pop, tract)]), by = c("race"), all.x = T)
yy <- merge(yy[, .(age, race, tract, pos, date, demo.tract.pop, demo.pop)], unique(demographics_nosex[, .(race.pop, tract)]), by = c("race"), all.x = T)
yy <- merge(y[, .(age, race, tract, pos, date)], demographics_nosex[, .(demo.tract.pop, age, race, tract)], by = c("age", "race", "tract"), all.x = T)
yy <- merge(yy[, .(age, race, tract, pos, date, demo.tract.pop)], unique(demographics_nosex[, .(demo.pop, age, race)]), by = c("age", "race"), all.x = T)
yy <- merge(yy[, .(age, race, tract, pos, date, demo.tract.pop, demo.pop)], unique(demographics_nosex[, .(tract.pop, tract)]), by = c("tract"), all.x = T)
yy <- merge(yy[, .(age, race, tract, pos, date, demo.tract.pop, demo.pop)], unique(demographics_nosex[, .(race.pop, tract)]), by = c("race"), all.x = T)
yy <- merge(yy[, .(age, race, tract, pos, date, demo.tract.pop, demo.pop)], unique(demographics_nosex[, .(race.pop)]), by = c("race"), all.x = T)
demographics_nosex
demographics[, tract.pop := sum(population), by = "tract"]
demographics_nosex <- demographics[, .(population = sum(population)), by = c("tract", "race", "age", "tract.pop")] #temp until we get sex
demographics_nosex[, demo.pop := sum(population), by = c("age", "race")]
demographics_nosex[, race.pop := sum(population), by = c("race")]
demographics_nosex[, demo.tract.pop := sum(population), by = c("age", "race", "tract")] #same as population
yy <- merge(y[, .(age, race, tract, pos, date)], demographics_nosex[, .(demo.tract.pop, age, race, tract)], by = c("age", "race", "tract"), all.x = T)
yy <- merge(yy[, .(age, race, tract, pos, date, demo.tract.pop)], unique(demographics_nosex[, .(demo.pop, age, race)]), by = c("age", "race"), all.x = T)
yy <- merge(yy[, .(age, race, tract, pos, date, demo.tract.pop, demo.pop)], unique(demographics_nosex[, .(tract.pop, tract)]), by = c("tract"), all.x = T)
yy <- merge(yy[, .(age, race, tract, pos, date, demo.tract.pop, demo.pop)], unique(demographics_nosex[, .(race.tract.pop)]), by = c("race", "tract"), all.x = T)
demographics_nosex[, race.tract.pop := sum(population), by = c("race", "tract")]
demographics_nosex[, demo.tract.pop := sum(population), by = c("age", "race", "tract")] #same as population
yy <- merge(y[, .(age, race, tract, pos, date)], demographics_nosex[, .(demo.tract.pop, age, race, tract)], by = c("age", "race", "tract"), all.x = T)
yy <- merge(yy[, .(age, race, tract, pos, date, demo.tract.pop)], unique(demographics_nosex[, .(demo.pop, age, race)]), by = c("age", "race"), all.x = T)
yy <- merge(yy[, .(age, race, tract, pos, date, demo.tract.pop, demo.pop)], unique(demographics_nosex[, .(tract.pop, tract)]), by = c("tract"), all.x = T)
yy <- merge(yy[, .(age, race, tract, pos, date, demo.tract.pop, demo.pop)], unique(demographics_nosex[, .(race.tract.pop)]), by = c("race", "tract"), all.x = T)
unique(demographics_nosex[, .(race.tract.pop)]
unique(demographics_nosex[, .(race.tract.pop)])
unique(demographics_nosex[, .(tract.pop, tract)])
yy <- merge(yy[, .(age, race, tract, pos, date, demo.tract.pop, demo.pop)], unique(demographics_nosex[, .(race.tract.pop, race, tract)]), by = c("race", "tract"), all.x = T)
yy[, month1 := month(date)]
yy[, week1 := week(date)]
Get1 <- function(zz) {
stopifnot(uniqueN(zz) == 1)
zz[1]
}
Loess <- function(values, span = 0.5) {
dt <- data.table(values, index = 1:length(values))
m <- loess(values ~ index, data = dt, degree = 1, span = span)
pmax(0, predict(m, newdata = dt))
}
GetCI <- function(x, n, index) {
ci <- rep(NA_real_, length(x))
for (i in 1:length(x)) {
ci[i] <- binom.test(x[i], n[i])$conf.int[index]
}
return(ci)
}
pdf(file = "~/Dropbox/LEMMA_shared/JS code branch/SF testing by tract and demo4.pdf", width = 11, height = 8)
dev.off()
by.race <- yy[week1 >= 24 & week1 <= 27 & race.tract.pop > 0 & age != "0-17", .(num.pos = sum(pos), num.tests = .N, pos.per.test = sum(pos) / .N, race.tract.pop = Get1(race.tract.pop)), keyby = c("race", "tract")]
by.race[, CI.low := GetCI(num.pos, num.tests, 1)]
by.race[, CI.high := GetCI(num.pos, num.tests, 2)]
by.race[, CI.width := CI.high - CI.low]
by.race[, TRACTA := as.integer(tract)]
map1 <- merge(by.race, name.geo.tract, by = "TRACTA")
map1[CI.low > 0.15, tract.text := tract]
sum.latinx <- map1[CI.low > 0.15 & race == "Latinx", sum(race.tract.pop)]
setnames(map1, "NAME_E", "NAME")
sf.map <- readRDS("~/Documents/MissionCovid/San Francisco Population and map.RDS")
map1 <- merge(sf.map, map1, by = "NAME")
map1 <- cbind(map1, st_coordinates(st_centroid(map1)))
print(ggplot(map1, aes(fill = CI.low, label = tract.text, x = X, y = Y)) +
geom_sf(color = "grey") +
scale_fill_gradient(low = "palegreen", high = "red") +
#scale_fill_viridis_c(option = "D") +
coord_sf(xlim = c(-122.52, -122.37), ylim = c(37.71, 37.81)) +
geom_text() +
ggtitle("Labeled tracts have 2.5% quantile infected > 15% within one or more Latinx age group", subtitle = paste("Total Latinx population of labelled tracts = ", sum.latinx)))
print(ggplot(map1, aes(fill = CI.low, label = tract.text, x = X, y = Y)) +
geom_sf(color = "grey") +
scale_fill_gradient(low = "palegreen", high = "red") +
#scale_fill_viridis_c(option = "D") +
coord_sf(xlim = c(-122.52, -122.37), ylim = c(37.71, 37.81)) +
geom_text() +
ggtitle("Labeled tracts have 2.5% quantile infected > 15% within Latinx", subtitle = paste("Total Latinx population of labelled tracts = ", sum.latinx)))
unique(yy[week1 >= 24 & week1 <= 27, date])
range(yy[week1 >= 24 & week1 <= 27, date])
diff(range(yy[week1 >= 24 & week1 <= 27, date]))
sort(yy[week1 >= 24 & week1 <= 27, date])
sort(unique(yy[week1 >= 24 & week1 <= 27, date]))
as.Date("2020-07-06") - as.Date("2020-06-09")
by.race <- yy[week1 >= 24 & week1 <= 27 & race.tract.pop > 0 & age != "0-17", .(num.pos = sum(pos), num.tests = .N, pos.per.test = sum(pos) / .N, race.tract.pop = Get1(race.tract.pop)), keyby = c("race", "tract")]
by.race[, CI.low := GetCI(num.pos, num.tests, 1)]
by.race[, CI.high := GetCI(num.pos, num.tests, 2)]
by.race[, CI.width := CI.high - CI.low]
by.race
by.race[, CI.low > 0.1]
by.race[CI.low > 0.1]
by.race[, race.CI.low := max((num.tests > 2) * CI.low), by = race]
by.race <- yy[week1 >= 24 & week1 <= 27 & race.tract.pop > 0 & age != "0-17", .(num.pos = sum(pos), num.tests = .N, pos.per.test = sum(pos) / .N, race.tract.pop = Get1(race.tract.pop)), keyby = c("race", "tract")]
by.race[, CI.low := GetCI(num.pos, num.tests, 1)]
by.race[, CI.high := GetCI(num.pos, num.tests, 2)]
by.race[, CI.width := CI.high - CI.low]
by.race[, race.CI.low := max((num.tests > 2) * CI.low), by = race]
by.race[, TRACTA := as.integer(tract)]
map1 <- merge(by.race, name.geo.tract, by = "TRACTA")
map1[race.CI.low > 0.15, tract.text := tract]
sum.latinx <- map1[race.CI.low > 0.15 & race == "Latinx", sum(race.tract.pop)]
setnames(map1, "NAME_E", "NAME")
sf.map <- readRDS("~/Documents/MissionCovid/San Francisco Population and map.RDS")
map1 <- merge(sf.map, map1, by = "NAME")
map1 <- cbind(map1, st_coordinates(st_centroid(map1)))
print(ggplot(map1, aes(fill = race.CI.low, label = tract.text, x = X, y = Y)) +
geom_sf(color = "grey") +
scale_fill_gradient(low = "palegreen", high = "red") +
#scale_fill_viridis_c(option = "D") +
coord_sf(xlim = c(-122.52, -122.37), ylim = c(37.71, 37.81)) +
geom_text() +
ggtitle("Labeled tracts have 2.5% quantile infected > 15% within Latinx", subtitle = paste("Total Latinx population of labelled tracts = ", sum.latinx)))
by.race
by.race[race.CI.low > 0.15]
by.race <- yy[week1 >= 24 & week1 <= 27 & race.tract.pop > 0 & age != "0-17", .(num.pos = sum(pos), num.tests = .N, pos.per.test = sum(pos) / .N, race.tract.pop = Get1(race.tract.pop)), keyby = c("race", "tract")]
by.race[, CI.low := GetCI(num.pos, num.tests, 1)]
by.race[, CI.high := GetCI(num.pos, num.tests, 2)]
by.race[, CI.width := CI.high - CI.low]
by.race[, race.CI.low := max((num.tests > 2) * CI.low), by = tract]
by.race[, TRACTA := as.integer(tract)]
map1 <- merge(by.race, name.geo.tract, by = "TRACTA")
map1[race.CI.low > 0.15, tract.text := tract]
sum.latinx <- map1[race.CI.low > 0.15 & race == "Latinx", sum(race.tract.pop)]
setnames(map1, "NAME_E", "NAME")
sf.map <- readRDS("~/Documents/MissionCovid/San Francisco Population and map.RDS")
map1 <- merge(sf.map, map1, by = "NAME")
map1 <- cbind(map1, st_coordinates(st_centroid(map1)))
print(ggplot(map1, aes(fill = race.CI.low, label = tract.text, x = X, y = Y)) +
geom_sf(color = "grey") +
scale_fill_gradient(low = "palegreen", high = "red") +
#scale_fill_viridis_c(option = "D") +
coord_sf(xlim = c(-122.52, -122.37), ylim = c(37.71, 37.81)) +
geom_text() +
ggtitle("Labeled tracts have 2.5% quantile infected > 15% within Latinx", subtitle = paste("Total Latinx population of labelled tracts = ", sum.latinx)))
by.race[CI.low > 0.1]
by.race[CI.low > 0.15]
by.race[CI.low > 0.05]
print(tail(by.demo[num.tests > 2, .(race, age, tract, num.pos, num.tests, pos.per.test, CI.low, CI.high, demo.tract.pop)], 30))
?setkey
setorder(by.demo[num.tests > 2, .(race, age, tract, num.pos, num.tests, pos.per.test, CI.low, CI.high, demo.tract.pop)], -CI.low)
print(setorder(by.demo[num.tests > 2, .(race, age, tract, num.pos, num.tests, pos.per.test, CI.low, CI.high, demo.tract.pop)], -CI.low))
print(setorder(by.demo[num.tests > 2, .(race, age, tract, num.pos, num.tests, pos.per.test, CI.low, CI.high, demo.tract.pop)], -CI.low)[1:30])
print(setorder(by.race[num.tests > 2, .(race, age, tract, num.pos, num.tests, pos.per.test, CI.low, CI.high, demo.tract.pop)], -CI.low)[1:30])
print(setorder(by.race[num.tests > 2, .(race, tract, num.pos, num.tests, pos.per.test, CI.low, CI.high, demo.tract.pop)], -CI.low)[1:30])
print(setorder(by.race[num.tests > 2, .(race, tract, num.pos, num.tests, pos.per.test, CI.low, CI.high, race.tract.pop)], -CI.low)[1:30])
print(setorder(by.race[num.tests > 2, .(race, tract, num.pos, num.tests, pos.per.test, CI.low, CI.high, race.tract.pop)], -CI.low)[1:20])
source('~/Dropbox (UC Berkeley Biostat)/LEMMA_shared/JS code branch/Read Cenus Data for SF tracts.R')
print(setorder(by.race[num.tests > 2, .(race, tract, num.pos, num.tests, pos.per.test, CI.low, CI.high, race.tract.pop)], -CI.low)[1:20])
dev.off()
demographics$tract <- as.character(demographics$tract)
demographics[, tract.pop := sum(population), by = "tract"]
demographics_nosex <- demographics[, .(population = sum(population)), by = c("tract", "race", "age", "tract.pop")] #temp until we get sex
demographics_nosex[, demo.pop := sum(population), by = c("age", "race")]
demographics_nosex[, race.tract.pop := sum(population), by = c("race", "tract")]
demographics_nosex[, demo.tract.pop := sum(population), by = c("age", "race", "tract")] #same as population
yy <- merge(y[, .(age, race, tract, pos, date)], demographics_nosex[, .(demo.tract.pop, age, race, tract)], by = c("age", "race", "tract"), all.x = T)
yy <- merge(yy[, .(age, race, tract, pos, date, demo.tract.pop)], unique(demographics_nosex[, .(demo.pop, age, race)]), by = c("age", "race"), all.x = T)
yy <- merge(yy[, .(age, race, tract, pos, date, demo.tract.pop, demo.pop)], unique(demographics_nosex[, .(tract.pop, tract)]), by = c("tract"), all.x = T)
yy <- merge(yy[, .(age, race, tract, pos, date, demo.tract.pop, demo.pop)], unique(demographics_nosex[, .(race.tract.pop, race, tract)]), by = c("race", "tract"), all.x = T)
yy[, month1 := month(date)]
yy[, week1 := week(date)]
Get1 <- function(zz) {
stopifnot(uniqueN(zz) == 1)
zz[1]
}
Loess <- function(values, span = 0.5) {
dt <- data.table(values, index = 1:length(values))
m <- loess(values ~ index, data = dt, degree = 1, span = span)
pmax(0, predict(m, newdata = dt))
}
GetCI <- function(x, n, index) {
ci <- rep(NA_real_, length(x))
for (i in 1:length(x)) {
ci[i] <- binom.test(x[i], n[i])$conf.int[index]
}
return(ci)
}
pdf(file = "~/Dropbox/LEMMA_shared/JS code branch/SF testing by tract and demo4.pdf", width = 11, height = 8)
by.race <- yy[week1 >= 24 & week1 <= 27 & race.tract.pop > 0 & age != "0-17", .(num.pos = sum(pos), num.tests = .N, pos.per.test = sum(pos) / .N, race.tract.pop = Get1(race.tract.pop)), keyby = c("race", "tract")]
by.race[, CI.low := GetCI(num.pos, num.tests, 1)]
by.race[, CI.high := GetCI(num.pos, num.tests, 2)]
by.race[, CI.width := CI.high - CI.low]
by.race[, race.CI.low := max((num.tests > 2) * CI.low), by = tract]
by.race[, TRACTA := as.integer(tract)]
map1 <- merge(by.race, name.geo.tract, by = "TRACTA")
map1[race.CI.low > 0.15, tract.text := tract]
sum.latinx <- map1[race.CI.low > 0.15 & race == "Latinx", sum(race.tract.pop)]
setnames(map1, "NAME_E", "NAME")
sf.map <- readRDS("~/Documents/MissionCovid/San Francisco Population and map.RDS")
map1 <- merge(sf.map, map1, by = "NAME")
map1 <- cbind(map1, st_coordinates(st_centroid(map1)))
print(ggplot(map1, aes(fill = race.CI.low, label = tract.text, x = X, y = Y)) +
geom_sf(color = "grey") +
scale_fill_gradient(low = "palegreen", high = "red") +
#scale_fill_viridis_c(option = "D") +
coord_sf(xlim = c(-122.52, -122.37), ylim = c(37.71, 37.81)) +
geom_text() +
ggtitle("Labeled tracts have 2.5% quantile infected > 15% within Latinx", subtitle = paste("Total Latinx population of labelled tracts = ", sum.latinx)))
print(setorder(by.race[num.tests > 2, .(race, tract, num.pos, num.tests, pos.per.test, CI.low, CI.high, race.tract.pop)], -CI.low)[1:20])
by.demo <- yy[week1 >= 24 & week1 <= 27 & demo.tract.pop > 0 & age != "0-17", .(num.pos = sum(pos), num.tests = .N, pos.per.test = sum(pos) / .N, demo.tract.pop = Get1(demo.tract.pop)), keyby = c("race", "age", "tract")]
by.demo[, demo := paste0(race, "_", age)]
by.demo[, CI.low := GetCI(num.pos, num.tests, 1)]
by.demo[, CI.high := GetCI(num.pos, num.tests, 2)]
by.demo[, CI.width := CI.high - CI.low]
setkey(by.demo, CI.low)
print(ggplot(by.demo[num.tests > 3 & num.pos > 0], aes(x = CI.width, y = pos.per.test, color = race, shape = age, size = demo.tract.pop / mean(demo.tract.pop))) + geom_point() + guides(size = F) + labs(caption = "Size relative to demographic population in census tract"))
print(setorder(by.demo[num.tests > 2, .(race, age, tract, num.pos, num.tests, pos.per.test, CI.low, CI.high, demo.tract.pop)], -CI.low)[1:30])
by.demo[, TRACTA := as.integer(tract)]
by.demo[, demo.CI.low := max((num.tests > 2) * CI.low), by = tract]
map1 <- merge(by.demo, name.geo.tract, by = "TRACTA")
map1[demo.CI.low > 0.15, tract.text := tract]
sum.latinx <- map1[demo.CI.low > 0.15 & race == "Latinx", sum(demo.tract.pop)]
setnames(map1, "NAME_E", "NAME")
sf.map <- readRDS("~/Documents/MissionCovid/San Francisco Population and map.RDS")
map1 <- merge(sf.map, map1, by = "NAME")
map1 <- cbind(map1, st_coordinates(st_centroid(map1)))
print(ggplot(map1, aes(fill = demo.CI.low, label = tract.text, x = X, y = Y)) +
geom_sf(color = "grey") +
scale_fill_gradient(low = "palegreen", high = "red") +
#scale_fill_viridis_c(option = "D") +
coord_sf(xlim = c(-122.52, -122.37), ylim = c(37.71, 37.81)) +
geom_text() +
ggtitle("Labeled tracts have 2.5% quantile infected > 15% within one or more Latinx age group", subtitle = paste("Total Latinx population of labelled tracts = ", sum.latinx)))
by.tract <- yy[week1 >= 24 & week1 <= 27 & tract.pop > 500, .(num.pos = sum(pos), num.tests = .N, pos.per.test = sum(pos) / .N, tract.pop = Get1(tract.pop)), keyby = "tract"]
by.tract[, CI.low := GetCI(num.pos, num.tests, 1)]
by.tract[, CI.high := GetCI(num.pos, num.tests, 2)]
dev.off()
rm(list = ls())
source('~/Dropbox (UC Berkeley Biostat)/LEMMA_shared/JS code branch/Read Cenus Data for SF tracts.R')
if (F) {
library(tidycensus)
#get_acs(geography = "state", variables = "B01002_001", year = 2017)
sf_pop <- get_acs(geography = "tract",
variables = "B01003_001",
state = "CA",
county = "San Francisco",
geometry = TRUE)
saveRDS(sf_pop, "~/Documents/MissionCovid/San Francisco Population and map.RDS", compress = F)
ggplot(sf_pop, aes(fill = estimate)) +
geom_sf(color = "black") +
#coord_sf(crs = 26911) +
scale_fill_viridis_c(option = "magma") +
coord_sf(xlim = c(-122.52, -122.37), ylim = c(37.71, 37.81))
}
library(ggrepel)
library(ggplot2)
library(sf)
library(data.table)
GetAgeSexCode <- function() {
#This is from the UeS study but the age/sex codes are the same
x <- fread("~/Dropbox/Reopen Berkeley and Diane Studies/nhgis0004_csv/nhgis0004_ds240_20185_2018_tract.csv")
y <- as.list(x[1])
y <- y[grep("E0", names(y))]
dt <- data.table(code = names(y), name = y)
dt[, age.sex.code := substr(code, 6, 8)]
dt[, name := sub("Estimates: ", "", name)]
dt[grep("Male", name), sex := "male"]
dt[grep("Female", name), sex := "female"]
dt[grep("Total", name), sex := "all"]
dt[, age := sub("Male: |Female: ", "", name)]
dt[grep("Total$|Male$|Female$", name), age := "all"]
dt$name <- NULL
dt$code <- NULL
age.sex.dt <- dt
return(dt)
}
age.sex.dt <- GetAgeSexCode()
x <- fread("~/Documents/CensusData/nhgis0008_csv/nhgis0008_ds240_20185_2018_tract.csv")
x <- x[STATE == "California" & COUNTY == "San Francisco County"]
x <- x[, grep("NAME_E|GISJOIN|TRACTA|E0", names(x)), with = F]
name.geo.tract <- unique(x[, .(GISJOIN, TRACTA, NAME_E)])
m <- melt(x, id.vars = c("TRACTA", "NAME_E", "GISJOIN"), value.name = "population")
m[, race.code := substr(variable, 1, 4)]
m[, age.sex.code := substr(variable, 6, 8)]
race.dt <- data.table(race = c("White Alone", "Black or African American Alone", "American Indian and Alaska Native Alone", "Asian Alone", "Native Hawaiian and Other Pacific Islander Alone", "Some Other Race Alone", "Two or More Races", "White Alone, Not Hispanic or Latino", "Hispanic or Latino"), race.code = c("AJ6O", "AJ6P", "AJ6Q", "AJ6R", "AJ6S", "AJ6T", "AJ6U", "AJ6V", "AJ6W"))
m <- merge(m, race.dt, by = "race.code")
m <- merge(m, age.sex.dt, by = "age.sex.code")
m2 <- m[race != "White Alone"]
m2 <- m2[age != "all" & sex != "all"]
CodeRace <- function(race) {
race2 <- rep("other", length(race))
race2[race == "Hispanic or Latino"] <- "Latinx"
race2[race == "Black or African American Alone"] <- "Black"
race2[race == "White Alone, Not Hispanic or Latino"] <- "White"
return(race2)
}
CodeAge <- function(age) {
age2 <- rep("", length(age))
age2[age %in% c("Under 5 years", "5 to 9 years", "10 to 14 years", "15 to 17 years")] <- "0-17"
age2[age %in% c("18 and 19 years", "20 to 24 years", "25 to 29 years")] <- "18-29"
age2[age %in% c("30 to 34 years", "35 to 44 years", "45 to 54 years", "55 to 64 years")] <- "30-64"
age2[age %in% c("65 to 74 years", "75 to 84 years", "85 years and over")] <- "65+"
return(age2)
}
m2[, race := CodeRace(race)]
m2[, age := CodeAge(age)]
setnames(m2, "TRACTA", "tract")
demographics <- m2[, .(population = sum(as.numeric(population))), by = c("tract", "race", "age", "sex")]
y=fread("~/Documents/MissionCovid/Modeling Testing DataSet 7.8.2020.csv")
y <- y[pos %in% c("0", "1")]
CodeRace2 <- function(race) {
race2 <- rep("other", length(race))
race2[race == 5] <- "Latinx"
race2[race == 1] <- "Black"
race2[race == 6] <- "White"
race2[race %in% c(NA, 8, 9, 11)] <- NA_character_
return(race2)
}
y[, race := CodeRace2(RaceEthnicity)]
y[dob %in% c("1/1/1900", "1/1/1901"), dob := NA_character_]
y[, age := floor(as.numeric(as.Date("2020/7/9") - as.Date(y$dob, format = "%m/%d/%Y"), units = "days") / 365.25)]
CodeAge2 <- function(age) {
age2 <- rep(NA_character_, length(age))
age2[age %in% 0:17] <- "0-17"
age2[age %in% 18:29] <- "18-29"
age2[age %in% 30:64] <- "30-64"
age2[age %in% 65:120] <- "65+"
return(age2)
}
y[, age := CodeAge2(age)]
y$pos <- as.integer(y$pos)
y[, date := as.Date(specdate, "%m/%d/%Y")]
#load street/tract dt
y.street.out <- readRDS("~/Documents/MissionCovid/AddressToTract.RDS")
y.street.out$id <- NULL
y.street.out <- unique(y.street.out)
y[, street := gsub("(#|,|APT|UNIT).*$", "", toupper(Address))]
y <- merge(y, unique(y.street.out), by = "street")
setnames(y, "cxy_tract_id", "tract")
demographics$tract <- as.character(demographics$tract)
demographics[, tract.pop := sum(population), by = "tract"]
demographics_nosex <- demographics[, .(population = sum(population)), by = c("tract", "race", "age", "tract.pop")] #temp until we get sex
demographics_nosex[, demo.pop := sum(population), by = c("age", "race")]
demographics_nosex[, race.tract.pop := sum(population), by = c("race", "tract")]
demographics_nosex[, demo.tract.pop := sum(population), by = c("age", "race", "tract")] #same as population
yy <- merge(y[, .(age, race, tract, pos, date)], demographics_nosex[, .(demo.tract.pop, age, race, tract)], by = c("age", "race", "tract"), all.x = T)
yy <- merge(yy[, .(age, race, tract, pos, date, demo.tract.pop)], unique(demographics_nosex[, .(demo.pop, age, race)]), by = c("age", "race"), all.x = T)
yy <- merge(yy[, .(age, race, tract, pos, date, demo.tract.pop, demo.pop)], unique(demographics_nosex[, .(tract.pop, tract)]), by = c("tract"), all.x = T)
yy <- merge(yy[, .(age, race, tract, pos, date, demo.tract.pop, demo.pop, tract.pop)], unique(demographics_nosex[, .(race.tract.pop, race, tract)]), by = c("race", "tract"), all.x = T)
yy[, month1 := month(date)]
yy[, week1 := week(date)]
Get1 <- function(zz) {
stopifnot(uniqueN(zz) == 1)
zz[1]
}
Loess <- function(values, span = 0.5) {
dt <- data.table(values, index = 1:length(values))
m <- loess(values ~ index, data = dt, degree = 1, span = span)
pmax(0, predict(m, newdata = dt))
}
GetCI <- function(x, n, index) {
ci <- rep(NA_real_, length(x))
for (i in 1:length(x)) {
ci[i] <- binom.test(x[i], n[i])$conf.int[index]
}
return(ci)
}
by.demo <- yy[week1 >= 24 & week1 <= 27 & demo.tract.pop > 0 & age != "0-17", .(num.pos = sum(pos), num.tests = .N, pos.per.test = sum(pos) / .N, demo.tract.pop = Get1(demo.tract.pop)), keyby = c("race", "age", "tract")]
by.demo[, demo := paste0(race, "_", age)]
yy
y
table(y$RaceEthnicity, exclude = NULL)
sort(table(y$RaceEthnicity, exclude = NULL))
(33540 + 40 + 30799 + 9) / nrow(y)
22311 + 1161
source('~/Dropbox (UC Berkeley Biostat)/LEMMA_shared/JS code branch/Read Cenus Data for SF tracts.R')
yy
yy[, mean(is.na(race))]
y[, mean(is.na(RaceEthnicity %in% c("NULL", "9", NA, "8", "11")))]
y[, mean(RaceEthnicity %in% c("NULL", "9", NA, "8", "11"))]
y[, mean(RaceEthnicity %in% c("NULL", "9", NA, "8", "11") & is.na(Address)) ]
y
y=fread("~/Documents/MissionCovid/Modeling Testing DataSet 7.8.2020.csv")
y[, mean(RaceEthnicity %in% c("NULL", "9", NA, "8", "11") & is.na(Address)) ]
y[, mean(RaceEthnicity %in% c("NULL", "9", NA, "8", "11"))]
y[pos == 1, mean(RaceEthnicity %in% c("NULL", "9", NA, "8", "11"))]
y[pos == 0, mean(RaceEthnicity %in% c("NULL", "9", NA, "8", "11"))]
y[is.na(pos), mean(RaceEthnicity %in% c("NULL", "9", NA, "8", "11"))]
unique(y$pos)
y[pos == "NULL", mean(RaceEthnicity %in% c("NULL", "9", NA, "8", "11"))]
yy[, mean(is.na(race))]
yy[pos==1, mean(is.na(race))]
yy[pos==0, mean(is.na(race))]
y
source('~/.active-rstudio-document')
setwd("~/Documents/GitHub/LEMMA-Forecasts/")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
